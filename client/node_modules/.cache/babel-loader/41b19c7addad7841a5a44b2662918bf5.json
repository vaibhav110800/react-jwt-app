{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vthakur\\\\Desktop\\\\mern-authentication-project\\\\client\\\\src\\\\components\\\\PasswordReset\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [validUrl, setValidUrl] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const param = useParams();\n  const url = `http://localhost:8080/api/password-reset/${param.id}/${param.token}`;\n  useEffect(() => {\n    const verifyUrl = async () => {\n      try {\n        await axios.get(url);\n        setValidUrl(true);\n      } catch (error) {\n        setValidUrl(false);\n      }\n    };\n\n    verifyUrl();\n  }, [param, url]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.post(url, {\n        password\n      });\n      setMsg(data.message);\n      setError(\"\");\n      window.location = \"/login\";\n    } catch (error) {\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        setError(error.response.data.message);\n        setMsg(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: validUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.green_btn,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PasswordReset, \"69fEPg3F8sHXKFNLsizCg6lHW4Q=\", false, function () {\n  return [useParams];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/Users/vthakur/Desktop/mern-authentication-project/client/src/components/PasswordReset/index.jsx"],"names":["useEffect","useState","Fragment","useParams","axios","styles","PasswordReset","validUrl","setValidUrl","password","setPassword","msg","setMsg","error","setError","param","url","id","token","verifyUrl","get","handleSubmit","e","preventDefault","data","post","message","window","location","response","status","container","form_container","target","value","input","error_msg","success_msg","green_btn"],"mappings":"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","sourcesContent":["import { useEffect, useState, Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst PasswordReset = () => {\r\n\tconst [validUrl, setValidUrl] = useState(false);\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [msg, setMsg] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst param = useParams();\r\n\tconst url = `http://localhost:8080/api/password-reset/${param.id}/${param.token}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst verifyUrl = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait axios.get(url);\r\n\t\t\t\tsetValidUrl(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetValidUrl(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tverifyUrl();\r\n\t}, [param, url]);\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post(url, { password });\r\n\t\t\tsetMsg(data.message);\r\n\t\t\tsetError(\"\");\r\n\t\t\twindow.location = \"/login\";\r\n\t\t} catch (error) {\r\n\t\t\tif (\r\n\t\t\t\terror.response &&\r\n\t\t\t\terror.response.status >= 400 &&\r\n\t\t\t\terror.response.status <= 500\r\n\t\t\t) {\r\n\t\t\t\tsetError(error.response.data.message);\r\n\t\t\t\tsetMsg(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{validUrl ? (\r\n\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t<form className={styles.form_container} onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<h1>Add New Password</h1>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\r\n\t\t\t\t\t\t{msg && <div className={styles.success_msg}>{msg}</div>}\r\n\t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<h1>404 Not Found</h1>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}